version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: credit
      POSTGRES_USER: local
      POSTGRES_PASSWORD: local
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U local"]
      interval: 1s
      timeout: 5s
      retries: 5
  
  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    command: redis-server --requirepass local
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]

  api:
    build:
      context: ./api
    x-develop:
      watch:
        - action: rebuild
          path: ./api
          # target: 
    image: credits-api:local
    restart: unless-stopped
    container_name: api 
    depends_on:
      postgres:
        condition: service_healthy
    ports: 
      - 80:80
    environment:
      DB_CONN: host=postgres user=local password=local dbname=credit port=5432 sslmode=disable
      REDIS_URI: redis://:local@redis:6379/0
    healthcheck:
      test: [ "CMD", "/wget", "--quiet", "--output-document=-", "http://0.0.0.0:80/health" ]
 
  load-test:
    build:
      context: ./load-test
    image: credits-load-test:local
    container_name: load-test
    network_mode: host

  asynq-mon:
    container_name: asynq-mon
    image: hibiken/asynqmon
    platform: linux/amd64
    ports:
      - "7001:8080"
    environment:
      - REDIS_URL=redis://:local@redis:6379/0

  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana 
  #   ports:
  #     - "8091:3000"
  #   environment:
  #     GF_AUTH_ANONYMOUS_ENABLED: true
  #     GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
  #     GF_AUTH_DISABLE_LOGIN_FORM: true
